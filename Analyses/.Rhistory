draw.circle(df$Indv.UTM.E, df$Indv.UTM.N, sqrt(df$Basal.Area / (pi) ) * 2/200, col = col,border=NA)
abline(v=df$SW.Easting[1]+c(5,10,15), lty="dashed", col="grey")
abline(h=df$SW.Northing[1]+c(5,10,15), lty="dashed", col="grey")
axis(side=1, at = df$SW.Easting[1]+c(2.5,7.5,12.5, 17.5), labels=LETTERS[1:4], tick=F)
axis(side=2, at = df$SW.Northing[1]+c(2.5,7.5,12.5, 17.5), labels=1:4, tick=F,las=1)
# add legend
legend(x=df$SW.Easting[1]+21,y=df$SW.Northing[1]+20,legend=dom, fill=sp.col,cex=.8,pt.cex=.8,xpd=NA)
}
# an example
see.plot(df,"PPW1314")
see.plot<-function(data, plot){
#set margin
par(oma=c(0,0,0,7))
# subset by a single plot
df<-subset(data, data$Plot==plot)
col<-sp.col[match(df$Species, dom, nomatch = 11)]
plot(df$Indv.UTM.E, df$Indv.UTM.N,xlim=c(df$SW.Easting[1],df$SW.Easting[1]+20), ylim=c(df$SW.Northing[1], df$SW.Northing[1]+20), xlab="", ylab="",yaxt="n", xaxt="n",col=col,pch=19, xaxs="i",cex=.25)
draw.circle(df$Indv.UTM.E, df$Indv.UTM.N, sqrt(df$Basal.Area / (pi) ) * 2/200, col = col,border=NA)
abline(v=df$SW.Easting[1]+c(5,10,15), lty="dashed", col="grey")
abline(h=df$SW.Northing[1]+c(5,10,15), lty="dashed", col="grey")
axis(side=1, at = df$SW.Easting[1]+c(2.5,7.5,12.5, 17.5), labels=LETTERS[1:4], tick=F)
axis(side=2, at = df$SW.Northing[1]+c(2.5,7.5,12.5, 17.5), labels=1:4, tick=F,las=1)
# add legend
legend(x=df$SW.Easting[1]+21,y=df$SW.Northing[1]+20,legend=dom, fill=sp.col,cex=.8,pt.cex=.8,xpd=NA)
#add title
title(plot)
}
# an example
see.plot(df,"PPW1314")
see.plot(df,"PPW1314")
see.plot(df,"PPW1315")
see.plot(df,"PPW1316")
see.plot(df,"PPW1317")
see.plot(df,"PPW1305")
see.plot(df,"PPW1305")
plot.list
head(indv.data)
plot.list<-get.plot.list()
plot.list<-get.plots()
plot.list<-get.plot()
length(plot.list)
dir()
plot.list
file.choose()
plot.list<-get.plot()
pdf("/Users/meaganoldfather/Desktop/plotpics.pdf")
for (i in 1:length(plot.list)){
see.plot(df,plot.list[i])
}
dev.off()
see.plot<-function(data, plot){
#set margin
par(oma=c(5,0,0,5))
# subset by a single plot
df<-subset(data, data$Plot==plot)
col<-sp.col[match(df$Species, dom, nomatch = 11)]
plot(df$Indv.UTM.E, df$Indv.UTM.N,xlim=c(df$SW.Easting[1],df$SW.Easting[1]+20), ylim=c(df$SW.Northing[1], df$SW.Northing[1]+20), xlab="", ylab="",yaxt="n", xaxt="n",col=col,pch=19, xaxs="i",cex=.25)
draw.circle(df$Indv.UTM.E, df$Indv.UTM.N, sqrt(df$Basal.Area / (pi) ) * 2/200, col = col,border=NA)
abline(v=df$SW.Easting[1]+c(5,10,15), lty="dashed", col="grey")
abline(h=df$SW.Northing[1]+c(5,10,15), lty="dashed", col="grey")
axis(side=1, at = df$SW.Easting[1]+c(2.5,7.5,12.5, 17.5), labels=LETTERS[1:4], tick=F)
axis(side=2, at = df$SW.Northing[1]+c(2.5,7.5,12.5, 17.5), labels=1:4, tick=F,las=1)
# add legend
legend(x=df$SW.Easting[1]+21,y=df$SW.Northing[1]+20,legend=dom, fill=sp.col,cex=.8,pt.cex=.8,xpd=NA)
#add title
title(plot)
}
# an example
see.plot(df,"PPW1305")
see.plot<-function(data, plot){
#set margin
par(oma=c(5,0,0,5))
# subset by a single plot
df<-subset(data, data$Plot==plot)
col<-sp.col[match(df$Species, dom, nomatch = 11)]
plot(df$Indv.UTM.E, df$Indv.UTM.N,xlim=c(df$SW.Easting[1],df$SW.Easting[1]+20), ylim=c(df$SW.Northing[1], df$SW.Northing[1]+20), xlab="", ylab="",yaxt="n", xaxt="n",col=col,pch=19, xaxs="i",cex=.25)
draw.circle(df$Indv.UTM.E, df$Indv.UTM.N, sqrt(df$Basal.Area / (pi) ) * 2/200, col = col,border=NA)
abline(v=df$SW.Easting[1]+c(5,10,15), lty="dashed", col="grey")
abline(h=df$SW.Northing[1]+c(5,10,15), lty="dashed", col="grey")
axis(side=1, at = df$SW.Easting[1]+c(2.5,7.5,12.5, 17.5), labels=LETTERS[1:4], tick=F)
axis(side=2, at = df$SW.Northing[1]+c(2.5,7.5,12.5, 17.5), labels=1:4, tick=F,las=1)
# add legend
legend(x=df$SW.Easting[1]+21,y=df$SW.Northing[1]+20,legend=dom, fill=sp.col,cex=.7,pt.cex=.7,xpd=NA)
#add title
title(plot)
}
# an example
see.plot(df,"PPW1305")
pdf("/Users/meaganoldfather/Desktop/plotpics.pdf")
for (i in 1:length(plot.list)){
see.plot(df,plot.list[i])
}
dev.off()
pdf('https://raw.githubusercontent.com/dackerly/PepperwoodVegPlots/master/Outputs/')
for (i in 1:length(plot.list)){
plot.list<-get.plot()
pdf("/Users/meaganoldfather/Pepperwood/GitDatabase/Outputs/PlotDiagrams.pdf")
for (i in 1:length(plot.list)){
see.plot(df,plot.list[i])
}
dev.off()
g
}
file.choose()
pdf("/Users/meaganoldfather/Desktop/Pepperwood/GitDatabase/Outputs/PlotDiagrams.pdf")
for (i in 1:length(plot.list)){
see.plot(df,plot.list[i])
}
dev.off()
# clear workspace
rm(list=ls())
#Packages
library("RCurl")
library("data.table")
library("picante")
library("colortools")
library("plotrix")
# sources in all functions
source_https <- function(url, ...) {
# parse and evaluate each .R script
sapply(c(url, ...), function(u) {
eval(parse(text = getURL(u, followlocation = TRUE, cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))), envir = .GlobalEnv)
})
}
source_https('https://raw.githubusercontent.com/dackerly/PepperwoodVegPlots/master/Analyses/PWfunctions_GitHub.R')
# get individual data
indv.data<-get.indv.data(2014)
head(indv.data)
tail(indv.data)
# get UTM coordinates for each plots SW corner, add to to indv df
sw.coords<-get.plot.info()
sw.coords$UTM.E<-as.numeric(sw.coords$UTM.E)
sw.coords$UTM.N<-as.numeric(sw.coords$UTM.N)
df<-merge(indv.data, sw.coords, by="Plot")
df<-df[,1:10]
colnames(df)<-c("Plot","Quad","Type","Num","Species", "X", "Y", "Basal.Area", "SW.Easting", "SW.Northing")
head(df)
# Calculate the amount necessary to add to the UTM for each quad
# A1: 0 added to X, 0 added to Y
# A2: 0 added to X, 5 added to Y
# A3: 0 added to X, 10 added to Y
# A4: 0 added to X, 15 added to Y
# B1: 5 added to X, 0 added to Y
# B2: 5 added to X, 5 added to Y
# B3: 5 added to X, 10 added to Y
# B4: 5 added to X, 15 added to Y
# C1: 10 added to X, 0 added to Y
# C2: 10 added to X, 5 added to Y
# C3: 10 added to X, 10 added to Y
# C4: 10 added to X, 15 added to Y
# D1: 15 added to X, 0 added to Y
# D2: 15 added to X, 5 added to Y
# D3: 15 added to X, 10 added to Y
# D4: 15 added to X, 15 added to Y
quads<-unique(df[!is.na(df$Quad), "Quad"])
x.adds<-c(0,0,5,5,5,10,10,10,15,15,0,5,10,15,15,0)
y.adds<-c(5,15,15,10,0,0,5,10,15,5,0,5,15,0,10,10)
adds<-data.frame(Quad=quads, X.add=x.adds, Y.add=y.adds)
# add additional amount to add to each for specific quad
df<- merge(df,adds, by="Quad")
# change the measured X's and Y's to cm
df$X<-df$X/100
df$Y<-df$Y/100
head(df)
str(df)
# add all measurments up for an individual UTM
df$Indv.UTM.E<-df$SW.Easting+df$X.add+df$X
df$Indv.UTM.N<-df$SW.Northing+df$Y.add+df$Y
head(df)
tail(df)
# reduce down to necessary columns
indv.UTM<-df[,c(2,1,3,4,5,8,13,14)]
# NOTE: when using head you will only see 7 digits for the coordinates, but the data does go out to more decimal places in the below csv file
head(indv.UTM)
# writes csv
#write.csv(indv.UTM, "Desktop/IndvUTM.csv")
# visualize a plot
# colors for main species, black for rest of species
dom<-c("QUEAGR", "PSEMEN", "QUEGAR", "QUEDOU", "QUEKEL", "ARBMEN", "UMBCAL" ,"ARCMAN", "HETARB","AESCAL")
wheel("forestgreen")
sp.col<-c(wheel("forestgreen")[c(1,3:7,9,10,11)],"grey" ,"black")
# size depends on Basal. Area
data=df
plot="PPW1313"
df<-subset(data, data$Plot==plot)
col<-sp.col[match(df$Species, dom, nomatch = 11)]
plot(df$Indv.UTM.E, df$Indv.UTM.N,xlim=c(df$SW.Easting[1],df$SW.Easting[1]+20), ylim=c(df$SW.Northing[1], df$SW.Northing[1]+20), xlab="", ylab="",yaxt="n", xaxt="n",col=col,pch=19, xaxs="i",cex=.25)
draw.circle(df$Indv.UTM.E, df$Indv.UTM.N, sqrt(df$Basal.Area / (pi) ) * 2/200, col = col,border=NA)
par(oma=c(5,0,0,5))
df<-subset(data, data$Plot==plot)
col<-sp.col[match(df$Species, dom, nomatch = 11)]
if (quad=="all"){
}
plot(df$Indv.UTM.E, df$Indv.UTM.N,xlim=c(df$SW.Easting[1],df$SW.Easting[1]+20), ylim=c(df$SW.Northing[1], df$SW.Northing[1]+20), xlab="", ylab="",yaxt="n", xaxt="n",col=col,pch=19, xaxs="i",cex=.25)
draw.circle(df$Indv.UTM.E, df$Indv.UTM.N, sqrt(df$Basal.Area / (pi) ) * 2/200, col = col,border=NA)
abline(v=df$SW.Easting[1]+c(5,10,15), lty="dashed", col="grey")
abline(h=df$SW.Northing[1]+c(5,10,15), lty="dashed", col="grey")
axis(side=1, at = df$SW.Easting[1]+c(2.5,7.5,12.5, 17.5), labels=LETTERS[1:4], tick=F)
axis(side=2, at = df$SW.Northing[1]+c(2.5,7.5,12.5, 17.5), labels=1:4, tick=F,las=1)
legend(x=df$SW.Easting[1]+21,y=df$SW.Northing[1]+20,legend=dom, fill=sp.col,cex=.7,pt.cex=.7,xpd=NA)
sp.col<-c(wheel("forestgreen")[c(1,3:7,9,10,11)],"white" ,"black")
par(oma=c(5,0,0,5))
df<-subset(data, data$Plot==plot)
col<-sp.col[match(df$Species, dom, nomatch = 11)]
plot(df$Indv.UTM.E, df$Indv.UTM.N,xlim=c(df$SW.Easting[1],df$SW.Easting[1]+20), ylim=c(df$SW.Northing[1], df$SW.Northing[1]+20), xlab="", ylab="",yaxt="n", xaxt="n",col=col,pch=19, xaxs="i",cex=.25)
sp.col<-c(wheel("forestgreen")[c(1,3:7,9,10,11)],"grey" ,"black")
df<-subset(data, data$Plot==plot)
col<-sp.col[match(df$Species, dom, nomatch = 11)]
plot(df$Indv.UTM.E, df$Indv.UTM.N,xlim=c(df$SW.Easting[1],df$SW.Easting[1]+20), ylim=c(df$SW.Northing[1], df$SW.Northing[1]+20), xlab="", ylab="",yaxt="n", xaxt="n",col=col,pch=19, xaxs="i",cex=.25)
draw.circle(df$Indv.UTM.E, df$Indv.UTM.N, sqrt(df$Basal.Area / (pi) ) * 2/200, col = col,border=NA)
abline(v=df$SW.Easting[1]+c(5,10,15), lty="dashed", col="grey")
abline(h=df$SW.Northing[1]+c(5,10,15), lty="dashed", col="grey")
axis(side=1, at = df$SW.Easting[1]+c(2.5,7.5,12.5, 17.5), labels=LETTERS[1:4], tick=F)
axis(side=2, at = df$SW.Northing[1]+c(2.5,7.5,12.5, 17.5), labels=1:4, tick=F,las=1)
legend(x=df$SW.Easting[1]+21,y=df$SW.Northing[1]+20,legend=dom, fill=sp.col,cex=.7,pt.cex=.7,xpd=NA)
par(oma=c(0,0,0,5))
plot(df$Indv.UTM.E, df$Indv.UTM.N,xlim=c(df$SW.Easting[1],df$SW.Easting[1]+20), ylim=c(df$SW.Northing[1], df$SW.Northing[1]+20), xlab="", ylab="",yaxt="n", xaxt="n",col=col,pch=19, xaxs="i",cex=.25)
draw.circle(df$Indv.UTM.E, df$Indv.UTM.N, sqrt(df$Basal.Area / (pi) ) * 2/200, col = col,border=NA)
abline(v=df$SW.Easting[1]+c(5,10,15), lty="dashed", col="grey")
abline(h=df$SW.Northing[1]+c(5,10,15), lty="dashed", col="grey")
axis(side=1, at = df$SW.Easting[1]+c(2.5,7.5,12.5, 17.5), labels=LETTERS[1:4], tick=F)
axis(side=2, at = df$SW.Northing[1]+c(2.5,7.5,12.5, 17.5), labels=1:4, tick=F,las=1)
legend(x=df$SW.Easting[1]+21,y=df$SW.Northing[1]+20,legend=dom, fill=sp.col,cex=.7,pt.cex=.7,xpd=NA)
plot(df$Indv.UTM.E, df$Indv.UTM.N,xlim=c(df$SW.Easting[1],df$SW.Easting[1]+20), ylim=c(df$SW.Northing[1], df$SW.Northing[1]+20), xlab="", ylab="",yaxt="n", xaxt="n",col=col,pch=19, xaxs="i",cex=.25)
draw.circle(df$Indv.UTM.E, df$Indv.UTM.N, sqrt(df$Basal.Area / (pi) ) * 2/100, col = col,border=NA)
abline(v=df$SW.Easting[1]+c(5,10,15), lty="dashed", col="grey")
abline(h=df$SW.Northing[1]+c(5,10,15), lty="dashed", col="grey")
axis(side=1, at = df$SW.Easting[1]+c(2.5,7.5,12.5, 17.5), labels=LETTERS[1:4], tick=F)
axis(side=2, at = df$SW.Northing[1]+c(2.5,7.5,12.5, 17.5), labels=1:4, tick=F,las=1)
legend(x=df$SW.Easting[1]+21,y=df$SW.Northing[1]+20,legend=dom, fill=sp.col,cex=.7,pt.cex=.7,xpd=NA)
plot(1:10,1:10)
plot(df$Indv.UTM.E, df$Indv.UTM.N,xlim=c(df$SW.Easting[1],df$SW.Easting[1]+20), ylim=c(df$SW.Northing[1], df$SW.Northing[1]+20), xlab="", ylab="",yaxt="n", xaxt="n",col=col,pch=19, xaxs="i",cex=.25)
draw.circle(df$Indv.UTM.E, df$Indv.UTM.N, sqrt(df$Basal.Area / (pi) ) * 2/00, col = col,border=NA)
abline(v=df$SW.Easting[1]+c(5,10,15), lty="dashed", col="grey")
abline(h=df$SW.Northing[1]+c(5,10,15), lty="dashed", col="grey")
df<-subset(data, data$Plot==plot)
col<-sp.col[match(df$Species, dom, nomatch = 11)]
par(oma=c(0,0,0,5))
df<-subset(data, data$Plot==plot)
col<-sp.col[match(df$Species, dom, nomatch = 11)]
plot(df$Indv.UTM.E, df$Indv.UTM.N,xlim=c(df$SW.Easting[1],df$SW.Easting[1]+20), ylim=c(df$SW.Northing[1], df$SW.Northing[1]+20), xlab="", ylab="",yaxt="n", xaxt="n",col=col,pch=19, xaxs="i",cex=.25)
draw.circle(df$Indv.UTM.E, df$Indv.UTM.N, sqrt(df$Basal.Area / (pi) ) * 2/00, col = col,border=NA)
abline(v=df$SW.Easting[1]+c(5,10,15), lty="dashed", col="grey")
abline(h=df$SW.Northing[1]+c(5,10,15), lty="dashed", col="grey")
axis(side=1, at = df$SW.Easting[1]+c(2.5,7.5,12.5, 17.5), labels=LETTERS[1:4], tick=F)
axis(side=2, at = df$SW.Northing[1]+c(2.5,7.5,12.5, 17.5), labels=1:4, tick=F,las=1)
legend(x=df$SW.Easting[1]+21,y=df$SW.Northing[1]+20,legend=dom, fill=sp.col,cex=.7,pt.cex=.7,xpd=NA)
dom<-c("QUEAGR", "PSEMEN", "QUEGAR", "QUEDOU", "QUEKEL", "ARBMEN", "UMBCAL" ,"ARCMAN", "HETARB","AESCAL")
wheel("forestgreen")
sp.col<-c(wheel("forestgreen")[c(1,3:7,9,10,11)],"grey" ,"black")
par(oma=c(0,0,0,5))
df<-subset(data, data$Plot==plot)
col<-sp.col[match(df$Species, dom, nomatch = 11)]
plot(df$Indv.UTM.E, df$Indv.UTM.N,xlim=c(df$SW.Easting[1],df$SW.Easting[1]+20), ylim=c(df$SW.Northing[1], df$SW.Northing[1]+20), xlab="", ylab="",yaxt="n", xaxt="n",col=col,pch=19, xaxs="i",cex=.25)
draw.circle(df$Indv.UTM.E, df$Indv.UTM.N, sqrt(df$Basal.Area / (pi) ) * 2/00, col = col,border=NA)
draw.circle(df$Indv.UTM.E, df$Indv.UTM.N, sqrt(df$Basal.Area / (pi) ) * 2/200, col = col,border=NA)
draw.circle(df$Indv.UTM.E, df$Indv.UTM.N, sqrt(df$Basal.Area / (pi) ) * 2/100, col = col,border=NA)
abline(v=df$SW.Easting[1]+c(5,10,15), lty="dashed", col="grey")
abline(h=df$SW.Northing[1]+c(5,10,15), lty="dashed", col="grey")
axis(side=1, at = df$SW.Easting[1]+c(2.5,7.5,12.5, 17.5), labels=LETTERS[1:4], tick=F)
axis(side=2, at = df$SW.Northing[1]+c(2.5,7.5,12.5, 17.5), labels=1:4, tick=F,las=1)
legend(x=df$SW.Easting[1]+21,y=df$SW.Northing[1]+20,legend=dom, fill=sp.col,cex=.7,pt.cex=.7,xpd=NA)
par(oma=c(5,0,0,5))
df<-subset(data, data$Plot==plot)
col<-sp.col[match(df$Species, dom, nomatch = 11)]
plot(df$Indv.UTM.E, df$Indv.UTM.N,xlim=c(df$SW.Easting[1],df$SW.Easting[1]+20), ylim=c(df$SW.Northing[1], df$SW.Northing[1]+20), xlab="", ylab="",yaxt="n", xaxt="n",col=col,pch=19, xaxs="i",cex=.25)
plot(df$Indv.UTM.E, df$Indv.UTM.N,xlim=c(df$SW.Easting[1],df$SW.Easting[1]+20), ylim=c(df$SW.Northing[1], df$SW.Northing[1]+20), xlab="", ylab="",yaxt="n", xaxt="n",col=col,pch=19, xaxs="i",cex=.25)
draw.circle(df$Indv.UTM.E, df$Indv.UTM.N, sqrt(df$Basal.Area / (pi) ) * 2/100, col = col,border=NA)
abline(v=df$SW.Easting[1]+c(5,10,15), lty="dashed", col="grey")
abline(h=df$SW.Northing[1]+c(5,10,15), lty="dashed", col="grey")
axis(side=1, at = df$SW.Easting[1]+c(2.5,7.5,12.5, 17.5), labels=LETTERS[1:4], tick=F)
axis(side=2, at = df$SW.Northing[1]+c(2.5,7.5,12.5, 17.5), labels=1:4, tick=F,las=1)
legend(x=df$SW.Easting[1]+21,y=df$SW.Northing[1]+20,legend=dom, fill=sp.col,cex=.7,pt.cex=.7,xpd=NA)
# clear workspace
rm(list=ls())
#Packages
library("RCurl")
library("data.table")
library("picante")
library("vegan")
library("raster")
library("maptools")
library("rgdal")
library("pscl")
library("arm")
library("knitr")
library("AICcmodavg")
# sources in all functions
source_https <- function(url, ...) {
# parse and evaluate each .R script
sapply(c(url, ...), function(u) {
eval(parse(text = getURL(u, followlocation = TRUE, cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))), envir = .GlobalEnv)
})
}
source_https('https://raw.githubusercontent.com/dackerly/PepperwoodVegPlots/master/Analyses/PWfunctions_GitHub.R')
#bring is major veg data
tr.df<-plants.by.plot(2014,type="TR")
seju.df<-plants.by.plot(2015,type="SEJU")
head(tr.df)
tr.pm<-tr.df[tr.df$Species=="PSEMEN",]
sj.pm<-seju.df[seju.df$Species=="PSEMEN",]
head(tr.pm)
head(sj.df)
head(sj.pm)
pm<-merge(tr.pm,sj.pm, all.x=T,all.y=T)
pm
head(pm)
head(tr.pm)
head(sj.pm)
pm<-merge(tr.pm[c(1,4)],sj.pm[1,6], by="Plot" all.x=T,all.y=T)
pm<-merge(tr.pm[c(1,4)],sj.pm[1,6], by="Plot", all.x=T,all.y=T)
tr.pm[c(1,4)]
sj.pm[1,6]
pm<-merge(tr.pm[c(1,4)],sj.pm[c(1,6)], by="Plot", all.x=T,all.y=T)
head(pm)
plot.list<-plot.list()
plot.list<-get.plot.list()
plot.list<-plots()
plots<-get.plot()
plots
tr<-get.indv.data(year=2014,stump=T)
head(tr)
tail(tr)
tr<-tr[tr$Type=="TR",]
head(tr)
tail(tr)
tr<-tr[tr$Species=="PSEMEN"]
tr<-tr[tr$Species=="PSEMEN",]
head(tr)
tr<-get.indv.data(year=2014)
tr<-tr[tr$Type=="TR",]
tr<-tr[tr$Species=="PSEMEN",]
head(tr)
tr<-tr[c(1,4,8),]
head(tr)
tr<-get.indv.data(year=2014)
tr<-tr[tr$Type=="TR",]
tr<-tr[tr$Species=="PSEMEN",]
tr<-tr[,c(1,4,8)]
head(tr)
tail(tr)
tr$DBH<-sqrt(tr$Basal.Area / pi) * 2
head(tr)
tr<-get.indv.data(year=2014)
tr<-tr[tr$Type=="TR",]
tr<-tr[tr$Species=="PSEMEN",]
tr$DBH<-sqrt(tr$Basal.Area / pi) * 2
head(tr)
tr<-tr[,c(1,4,9)]
head(tr)
sj.df<-get.seju.data(year=2015)
head(sj.df)
sj<-sj.df[sj.df$Species=="PSEMEN",]
head(sj.df)
head(sj)
sj<-sj[c(1,4,5)]
head(sj)
plot.list
tr.sj<-merge(tr,sj,by="Plot",all.x=T,all.y=T)
head(tr.sj)
tr<-tr.df[tr.df$Type=="TR",]
tr<-tr[tr$Species=="PSEMEN",]
tr$DBH<-sqrt(tr$Basal.Area / pi) * 2
tr<-tr[,c(1,9)]
head(tr)
tr<-tr.df[tr.df$Type=="TR",]
tr<-tr[tr$Species=="PSEMEN",]
tr$DBH<-sqrt(tr$Basal.Area / pi) * 2
head(tr)
tr<-tr.df[tr.df$Type=="TR",]
head(tr)
tr.df<-get.indv.data(year=2014)
tr<-tr.df[tr.df$Type=="TR",]
head(tr)
tr<-tr[tr$Species=="PSEMEN",]
head(tr)
tr$DBH<-sqrt(tr$Basal.Area / pi) * 2
head(tr)
tr<-tr[,c(1,4,7)]
head(tr)
tr<-tr.df[tr.df$Type=="TR",]
tr<-tr[tr$Species=="PSEMEN",]
tr$DBH<-sqrt(tr$Basal.Area / pi) * 2
head(tr)
tr<-tr[,c(1,4,9)]
head(tr)
head(tr)
tr.agg<-aggregate(DBH~Plot, data=tr, FUN=function (x) length(x>=25))
tr.agg
tr.small<-aggregate(DBH~Plot, data=tr, FUN=function (x) length(x<25))
head(tr)
tr.small
head(tr)
colnames(tr.big)<-c("Plot", "DBH>=25")
tr.big<-aggregate(DBH~Plot, data=tr, FUN=function (x) length(x>=25))
colnames(tr.big)<-c("Plot", "DBH>=25")
colnames(tr.big)<-c("Plot", "DBH>=25cm")
colnames(tr.small)<-c("Plot", "DBH<25cm")
tr.small
tr.agg<-rbind(tr.small,tr.big )
tr.agg<-cbind(tr.small,tr.big)
tr.agg
tr.agg<-merge(tr.small,tr.big)
tr.agg
tr.agg<-cbind(tr.small,tr.big[-1])
head(tr.agg)
tr.big<-aggregate(DBH~Plot, data=tr, FUN=function (x) length(x>=25))
colnames(tr.big)<-c("Plot", "DBH>=25cm")
tr.small<-aggregate(DBH~Plot, data=tr, FUN=function (x) length(x<25))
colnames(tr.small)<-c("Plot", "DBH<25cm")
tr.agg<-cbind(tr.small,tr.big[-1])
head(tr.agg)
tr.big<-aggregate(DBH~Plot, data=tr, FUN=function (x) length(x>=25))
tr.big
tr.small<-aggregate(DBH~Plot, data=tr, FUN=function (x) length(x<25))
tr.small
tr
tr.big<-aggregate(DBH~Plot, data=tr, FUN=function (x) length(x>=25))
tr.big
tr.big<-aggregate(DBH~Plot, data=tr, FUN=function (x) length(x>25))
head(tr.big)
head(tr)
tr.big<-aggregate(DBH~Plot, data=tr, FUN=function (x) length(which(x>25)))
tr.big
tr.big<-aggregate(DBH~Plot, data=tr, FUN=function (x) length(which(x>=25)))
colnames(tr.big)<-c("Plot", "DBH>=25cm")
tr.small<-aggregate(DBH~Plot, data=tr, FUN=function (x) length(which(x<25)))
colnames(tr.small)<-c("Plot", "DBH<25cm")
tr.agg<-cbind(tr.small,tr.big[-1])
head(tr.agg)
tr.agg)
tr.agg
sj.df<-get.seju.data(year=2015)
sj<-sj.df[sj.df$Species=="PSEMEN",]
sj<-sj[c(1,4,5)]
head(sj)
tr.sj<-merge(tr,sj,by="Plot",all.x=T,all.y=T)
head(tr.sj)
head(sj)
tr.sj<-merge(tr.agg,sj,by="Plot",all.x=T,all.y=T)
tr.sj
head(tr.sj)
tr.sj[is.na(tr.sj)]<-0
head(tr.sj)
head(sj)
sj<-aggregate(cbind(Num.Seedlings,Num.Juveniles)~Plot,data=sj,FUN=sum)
head(sj)
tr.sj<-merge(tr.agg,sj,by="Plot",all.x=T,all.y=T)
tr.sj[is.na(tr.sj)]<-0
head(tr.sj)
tr.sj<-merge(plot.lost,tr.sj,)
tr.sj<-merge(plots,tr.sj,)
plots<-as.data.frame(get.plot())
plots
colnames(plots)<-"Plot"
plots
tr.sj<-merge(plots,tr.sj,)
head(tr.sj)
tr.sj<-merge(plots,tr.sj,by="Plot",all.x=T)
head(tr.sj)
tr.sj[is.na(tr.sj)]<-0
head(tr.sj)
psemen.plots<-c("PPW1320", "PPW1349", "PPW1340", "PPW1341", "PPW1306")
tr.sj$Removal<-F
tr.sj[tr.sj$Plot%in%psemen.plots,"Removal"]<-T
head(tr.sj)
tr.sj
write.csv(tr.sj)
write.csv(tr.sj,"DougfirMangemen.csv")
head(tr.sj)
write.csv(tr.sj,"Desktop/DougfirMangemen.csv")
dir()
write.csv(tr.sj,"DougfirManagement.csv")
head(tr.sj)
head(tr)
tr$Basal.Area<-(tr$DBH/2)^2)*pi
tr$Basal.Area<-((tr$DBH/2)^2)*pi
head(tr)
tr<-tr.df[tr.df$Type=="TR",]
tr<-tr[tr$Species=="PSEMEN",]
tr$DBH<-sqrt(tr$Basal.Area / pi) * 2
head(tr)
tr<-tr.df[tr.df$Type=="TR",]
tr<-tr[tr$Species=="PSEMEN",]
tr$DBH<-sqrt(tr$Basal.Area / pi) * 2
tr<-tr[,c(1,4,9)]
head(tr)
tr$Basal.Area<-((tr$DBH/2)^2)*pi
head(tr)
tr.plot<-aggregate(Basal.Area~Plot,data=tr,FUN=sum)
head(tr.plot)
head(sj)
tr.plot<-merge(tr.plot,sj,by="Plot",all.x=T,all.y=T)
head(tr.plot)
tr.plot<-merge(plots,tr.plot,by="Plot",all.x=T)
head(tr.plot)
tr.plot[is.na(tr.plot)]<-0
head(tr.plot)
tr.plot$Removal<-F
tr.plot[tr.plot$Plot%in%psemen.plots,"Removal"]<-T
head(tr.plot)
head(tr.sj)
head(tr.plot)
tr.plot$Removal<-1
tr.plot[tr.plot$Plot%in%psemen.plots,"Removal"]<-2
head(tr.plot)
colors=c("black","red")
plot(tr.plot$Basal.Area,(tr.plot$Num.Seedlings+tr.plot$Num.Juveniles), col=colors[tr.plot$Removal])
plot(tr.plot$Basal.Area,(tr.plot$Num.Seedlings+tr.plot$Num.Juveniles), col=colors[tr.plot$Removal], pch=19)
plot(tr.plot$Basal.Area,(tr.plot$Num.Seedlings+tr.plot$Num.Juveniles), col=colors[tr.plot$Removal], pch=19, xlab="Doug fir Basal Area", "Seedlings+Juveniles")
plot(tr.plot$Basal.Area,(tr.plot$Num.Seedlings+tr.plot$Num.Juveniles), col=colors[tr.plot$Removal], pch=19, xlab="Doug fir Basal Area", ylab="Seedlings+Juveniles")
plot(tr.plot$Basal.Area,(tr.plot$Num.Seedlings+tr.plot$Num.Juveniles), col=colors[tr.plot$Removal], pch=19, xlab="Doug fir Basal Area", ylab=("Seedlings+Juveniles"))
